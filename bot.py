from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, BotCommand
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from aiogram.types import Message
import logging
import asyncio
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
import config.reader as reader
import sys

from core import check_admin

reader.read_config()

TOKEN = reader.get_param_value('token')

bot = Bot(token=TOKEN)
dp = Dispatcher()
logging.basicConfig(level=logging.INFO)


class AuthState(StatesGroup):
    waiting_for_phone = State()


@dp.message(Command("start"))
async def start_command(message: Message):
    await message.answer(f"""–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.full_name}! üëã –Ø ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –¥–æ–Ω–æ—Ä—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ –ú–ò–§–ò.

–ú–æ—è —Ü–µ–ª—å:
‚úÖ –£–ø—Ä–æ—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ –î–Ω–∏ –î–æ–Ω–æ—Ä–∞
‚úÖ –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –¥–æ–Ω–æ—Ä—Å—Ç–≤–µ –∫—Ä–æ–≤–∏ –∏ –∫–æ—Å—Ç–Ω–æ–≥–æ –º–æ–∑–≥–∞
‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –≤–∞–∂–Ω—ã—Ö –¥–∞—Ç–∞—Ö –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∞–Ω–∞–ª–∏–∑–æ–≤

–ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å?
üîπ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–¥–∞—á—É –∫—Ä–æ–≤–∏ –∑–∞ 2 –º–∏–Ω—É—Ç—ã
üîπ –£–∑–Ω–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–æ–Ω–æ—Ä–∞–º –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É
üîπ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é –¥–æ–Ω–∞—Ü–∏–π
üîπ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º""")

    await message.answer(f"""<b><i>–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</i></b>
------------------------------------
<b>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</b>
–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–§–ò–û, –∫–æ–Ω—Ç–∞–∫—Ç—ã, –¥–∞–Ω–Ω—ã–µ –¥–æ–Ω–æ—Ä—Å–∫–æ–π –∞–Ω–∫–µ—Ç—ã) –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –¥–æ–Ω–∞—Ü–∏—é –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –¥–æ–Ω–æ—Ä—Å–∫–∏–º —Ü–µ–Ω—Ç—Ä–æ–º –ú–ò–§–ò.

<b>–†–∞—Å—Å—ã–ª–∫–∞</b>
–ë–æ—Ç –º–æ–∂–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø–∏—Å–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∞–Ω–∞–ª–∏–∑–æ–≤, –¥–æ–Ω–æ—Ä—Å–∫–∏—Ö –∞–∫—Ü–∏—è—Ö –∏ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö —Ü–µ–Ω—Ç—Ä–∞. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /stop.

<b>–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</b>
–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –∑–∞—â–∏—â—ë–Ω–Ω–æ –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º –±–µ–∑ –≤–∞—à–µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è.

!!!–ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å —ç—Ç–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏!!!""", parse_mode=ParseMode.HTML)

    await message.answer("–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º! –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ /authenticate –∏–ª–∏ –≤—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é ‚Üì")


@dp.message(Command('authenticate'))
async def authorization(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞...")
    await state.set_state(AuthState.waiting_for_phone)


@dp.message(AuthState.waiting_for_phone)  # –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
async def process_phone(message: Message, state: FSMContext):
    phone_number = message.text  # –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥—ë–Ω–Ω—ã–π –Ω–æ–º–µ—Ä
    res = check_admin(message.from_user.id)
    if res:
        await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å')
    else:
        pass
    await state.clear()


@dp.message(Command('menu'))
async def menu_handler(message: Message):
    builder = InlineKeyboardBuilder()
    builder.button(text='–ù–∞—à —Å–∞–π—Ç', url='https://google.com')
    builder.button(text='–°–≤—è–∑–∞—Ç—å—Å—è –≤ Telegram', url='https://google.com')
    await message.answer(
        text='–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:',
        reply_markup=builder.as_markup()
    )


@dp.message(Command('another_menu'))
async def another_menu_handler(message: Message):
    builder = ReplyKeyboardBuilder()
    builder.button(text='–ù–∞—à —Å–∞–π—Ç', url='https://google.com')
    builder.button(text='–°–≤—è–∑–∞—Ç—å—Å—è –≤ Telegram', url='https://google.com')
    await message.answer(
        text='–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:',
        reply_markup=builder.as_markup()
    )


async def main():
    await bot.set_my_commands([
        BotCommand(command='start', description='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ'),
        BotCommand(command='menu', description='–ú–µ–Ω—é'),
        BotCommand(command='another_menu', description='–î—Ä—É–≥–æ–µ –º–µ–Ω—é'),
        BotCommand(command='authenticate', description='–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è')
    ])

    await dp.start_polling(bot)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())
