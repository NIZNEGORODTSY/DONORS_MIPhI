import re
import datetime
import requests


def is_valid_russian_phone(phone):
    pattern = r'^(\+7|8)[\s\-]?\(?\d{3}\)?[\s\-]?\d{3}[\s\-]?\d{2}[\s\-]?\d{2}$'
    return bool(re.fullmatch(pattern, phone))


def compare_date(date1: datetime.date, date2: datetime.date):
    today = datetime.date.today()
    try:
        if date1 != 0 or date2 != 0:
            delta1 = abs((date1 - today).days)
            delta2 = abs((date2 - today).days)
            if delta1 < delta2:
                return date1, '–¶–µ–Ω—Ç—Ä –ö—Ä–æ–≤–∏ –∏–º. –û.–ö. –ì–∞–≤—Ä–∏–ª–æ–≤–∞'
            else:
                return date2, '–¶–µ–Ω—Ç—Ä –ö—Ä–æ–≤–∏ –§–ú–ë–ê'
    except Exception:
        return 0, Exception


def display_history(data):
    places = {"FMBA": "–¶–µ–Ω—Ç—Ä –ö—Ä–æ–≤–∏ –§–ú–ë–ê", "Gavr": "–¶–µ–Ω—Ç—Ä –ö—Ä–æ–≤–∏ –∏–º. –û.–ö. –ì–∞–≤—Ä–∏–ª–æ–≤–∞"}
    cnt = 0
    res = ''
    for donation in data:
        date = donation.DonDate
        place = donation.DonPlace
        number = cnt + 1
        res += f"{number}: {date}, {places[place]}\n"
    return res


def validate_full_name(full_name):
    if not isinstance(full_name, str):
        return False

    pattern = r'^[–ê-–Ø–Å][–∞-—è—ë-]+ [–ê-–Ø–Å][–∞-—è—ë-]+ [–ê-–Ø–Å][–∞-—è—ë-]+$'

    if not re.fullmatch(pattern, full_name):
        return False

    parts = full_name.split()
    for part in parts:
        if part.startswith('-') or part.endswith('-') or '--' in part:
            return False

    return True


# –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ú–æ—Å–∫–≤—ã
LATITUDE = 55.7558
LONGITUDE = 37.6176


def get_location_by_ip():
    try:
        response = requests.get('https://ipinfo.io/json')
        data = response.json()
        loc = data.get('loc', 'N/A')
        return loc
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")


def get_daily_weather():
    LATITUDE, LONGITUDE = get_location_by_ip()
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ–≥–æ–¥—É –≤ –ú–æ—Å–∫–≤–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è."""
    url = "https://api.open-meteo.com/v1/forecast"
    params = {
        "latitude": LATITUDE,
        "longitude": LONGITUDE,
        "current": "temperature_2m,relative_humidity_2m,wind_speed_10m,precipitation",
        "daily": "weather_code,temperature_2m_max,temperature_2m_min,precipitation_sum",
        "timezone": "Europe/Moscow",
        "forecast_days": 1
    }

    response = requests.get(url, params=params)

    if response.status_code != 200:
        print(f"–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ (–∫–æ–¥ {response.status_code})")
        return None

    return response.json()


def generate_donor_advice(weather_data) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–æ–Ω–æ—Ä–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–≥–æ–¥—ã."""
    if not weather_data:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É–π—Ç–µ –æ–±—â–∏–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º."

    current = weather_data.get("current", {})
    temp = current.get("temperature_2m", 20)
    humidity = current.get("relative_humidity_2m", 50)
    wind = current.get("wind_speed_10m", 5)
    precipitation = current.get("precipitation", 0)

    advice = "üå§ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–æ–Ω–æ—Ä–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n"

    # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
    if temp > 25:
        advice += "‚òÄÔ∏è –ñ–∞—Ä–∫–æ! –ü–µ–π—Ç–µ 2-3 –ª–∏—Ç—Ä–∞ –≤–æ–¥—ã –¥–æ –¥–æ–Ω–∞—Ü–∏–∏ –∏ –∏–∑–±–µ–≥–∞–π—Ç–µ —Å–æ–ª–Ω—Ü–∞.\n"
    elif temp < 10:
        advice += "‚ùÑÔ∏è –•–æ–ª–æ–¥–Ω–æ! –û–¥–µ–Ω—å—Ç–µ—Å—å —Ç–µ–ø–ª–µ–µ –∏ –ø–µ–π—Ç–µ —Ç—ë–ø–ª—ã–µ –Ω–∞–ø–∏—Ç–∫–∏.\n"
    else:
        advice += "‚úÖ –ò–¥–µ–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è —Å–¥–∞—á–∏ –∫—Ä–æ–≤–∏.\n"

    # –°–æ–≤–µ—Ç—ã –ø–æ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏
    if humidity < 40:
        advice += "üíß –°—É—Ö–æ–π –≤–æ–∑–¥—É—Ö ‚Äî —É–≤–µ–ª–∏—á—å—Ç–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤–æ–¥—ã.\n"
    elif humidity > 80:
        advice += "üå´ –í—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å ‚Äî –≤–æ–∑–º–æ–∂–Ω–∞ –±—ã—Å—Ç—Ä–∞—è —É—Ç–æ–º–ª—è–µ–º–æ—Å—Ç—å.\n"

    # –°–æ–≤–µ—Ç—ã –ø–æ –≤–µ—Ç—Ä—É
    if wind > 15:
        advice += "üå¨ –°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä ‚Äî –≤–æ–∑—å–º–∏—Ç–µ –≤–µ—Ç—Ä–æ–≤–∫—É.\n"

    # –°–æ–≤–µ—Ç—ã –ø–æ –æ—Å–∞–¥–∫–∞–º
    if precipitation > 0:
        advice += "‚òîÔ∏è –û–∂–∏–¥–∞—é—Ç—Å—è –æ—Å–∞–¥–∫–∏ ‚Äî –≤–æ–∑—å–º–∏—Ç–µ –∑–æ–Ω—Ç.\n"

    # –û–±—â–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
    advice += "\n–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
    advice += "üçé –ü–æ–µ—à—å—Ç–µ –∑–∞ 2 —á–∞—Å–∞ –¥–æ —Å–¥–∞—á–∏ (–≥—Ä–µ—á–∫–∞, –ø–µ—á–µ–Ω—å, —è–±–ª–æ–∫–∏)\n"
    advice += "üí§ –•–æ—Ä–æ—à–æ –≤—ã—Å–ø–∏—Ç–µ—Å—å –Ω–∞–∫–∞–Ω—É–Ω–µ (–Ω–µ –º–µ–Ω–µ–µ 7-8 —á–∞—Å–æ–≤)\n"
    advice += "üßÇ –ò–∑–±–µ–≥–∞–π—Ç–µ —Å–æ–ª—ë–Ω–æ–π –∏ –∂–∏—Ä–Ω–æ–π –ø–∏—â–∏ –ø–µ—Ä–µ–¥ –¥–æ–Ω–∞—Ü–∏–µ–π\n"
    advice += "üß¶ –ù–∞–¥–µ–Ω—å—Ç–µ —É–¥–æ–±–Ω—É—é –æ–¥–µ–∂–¥—É —Å –∫–æ—Ä–æ—Ç–∫–∏–º–∏ —Ä—É–∫–∞–≤–∞–º–∏\n"
    advice += "üïí –ó–∞–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –æ—Ç–¥—ã—Ö 30-40 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã"

    return advice


def display_weather(data):
    """–í—ã–≤–æ–¥–∏—Ç –ø–æ–≥–æ–¥—É –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏."""
    if not data:
        print("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ")
        return

    current = data.get("current", {})
    print("\n=== –ü–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è ===")
    print(f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {current.get('temperature_2m')}¬∞C")
    print(f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {current.get('relative_humidity_2m')}%")
    print(f"–í–µ—Ç–µ—Ä: {current.get('wind_speed_10m')} –∫–º/—á")
    print(f"–û—Å–∞–¥–∫–∏: {current.get('precipitation')} –º–º")

    print("\n" + generate_donor_advice(data))
