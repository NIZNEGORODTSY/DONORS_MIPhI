from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, BotCommand
from aiogram.enums import ParseMode
import config.reader as reader
import logging

from handlers import admin, user

from core import get_admins
from keybord.admin import get_organizer_keyboard

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

TOKEN = reader.get_param_value('token')
ADMINS = get_admins()
ADMINS = ''

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dop = Dispatcher()


# –•—ç–Ω–¥–ª–µ—Ä—ã
@dop.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    if str(message.from_user.id) in ADMINS:

        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞!", reply_markup=get_organizer_keyboard())
    else:

        await message.answer(f"""–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.full_name}! üëã –Ø ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –¥–æ–Ω–æ—Ä—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ –ú–ò–§–ò.

        –ú–æ—è —Ü–µ–ª—å:
‚úÖ –£–ø—Ä–æ—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ –î–Ω–∏ –î–æ–Ω–æ—Ä–∞
‚úÖ –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –¥–æ–Ω–æ—Ä—Å—Ç–≤–µ –∫—Ä–æ–≤–∏ –∏ –∫–æ—Å—Ç–Ω–æ–≥–æ –º–æ–∑–≥–∞
‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –≤–∞–∂–Ω—ã—Ö –¥–∞—Ç–∞—Ö –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∞–Ω–∞–ª–∏–∑–æ–≤

–ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å?
üîπ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–¥–∞—á—É –∫—Ä–æ–≤–∏ –∑–∞ 2 –º–∏–Ω—É—Ç—ã
üîπ –£–∑–Ω–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–æ–Ω–æ—Ä–∞–º –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É
üîπ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é –¥–æ–Ω–∞—Ü–∏–π
üîπ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º""")

        await message.answer(f"""<b><i>–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</i></b>
------------------------------------
<b>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</b>
–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–§–ò–û, –∫–æ–Ω—Ç–∞–∫—Ç—ã, –¥–∞–Ω–Ω—ã–µ –¥–æ–Ω–æ—Ä—Å–∫–æ–π –∞–Ω–∫–µ—Ç—ã) –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –¥–æ–Ω–∞—Ü–∏—é –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –¥–æ–Ω–æ—Ä—Å–∫–∏–º —Ü–µ–Ω—Ç—Ä–æ–º –ú–ò–§–ò.

<b>–†–∞—Å—Å—ã–ª–∫–∞</b>
–ë–æ—Ç –º–æ–∂–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø–∏—Å–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∞–Ω–∞–ª–∏–∑–æ–≤, –¥–æ–Ω–æ—Ä—Å–∫–∏—Ö –∞–∫—Ü–∏—è—Ö –∏ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö —Ü–µ–Ω—Ç—Ä–∞. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /stop.

<b>–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</b>
–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –∑–∞—â–∏—â—ë–Ω–Ω–æ –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º –±–µ–∑ –≤–∞—à–µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è.

        !!!–ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å —ç—Ç–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏!!!""", parse_mode=ParseMode.HTML)
        await bot.set_my_commands([
            BotCommand(command='start', description='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ'),
            BotCommand(command='menu', description='–ú–µ–Ω—é'),
            BotCommand(command='another_menu', description='–î—Ä—É–≥–æ–µ –º–µ–Ω—é'),
            BotCommand(command='authenticate', description='–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è')
        ])
        await message.answer("–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º! –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ /authenticate –∏–ª–∏ –≤—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é ‚Üì")


async def main():
    dop.include_routers(admin.dp)
    dop.include_routers(user.dp)
    await dop.start_polling(bot)


if __name__ == "__main__":
    import asyncio

    asyncio.run(main())
